
[A


HidukPaul47@HOME-PC MINGW64 /
$ cd

HidukPaul47@HOME-PC MINGW64 ~ (main)
$ cd D:

HidukPaul47@HOME-PC MINGW64 /d
$ dir
$RECYCLE.BIN             English   Soft          System\ Volume\ Information
BELOFF_2O22.ISO.torrent  HillelQA  StudySCreens

HidukPaul47@HOME-PC MINGW64 /d
$ cd HillelQA

HidukPaul47@HOME-PC MINGW64 /d/HillelQA
$ dir
HidukPaulQAmHillel              InstSoftQA  Projects
Hillel\ Dz\ Java\ oop\ Screens  MyCV        StudySCreens

HidukPaul47@HOME-PC MINGW64 /d/HillelQA
$ cd Projects

HidukPaul47@HOME-PC MINGW64 /d/HillelQA/Projects
$ dir
GitHub  JavaHtmlCssJS+

HidukPaul47@HOME-PC MINGW64 /d/HillelQA/Projects
$ cd GitHub

HidukPaul47@HOME-PC MINGW64 /d/HillelQA/Projects/GitHub
$ dir
AllProjects  Dz24\ 00\ token.txt  RepositAll

HidukPaul47@HOME-PC MINGW64 /d/HillelQA/Projects/GitHub
$ cd AllProjects

HidukPaul47@HOME-PC MINGW64 /d/HillelQA/Projects/GitHub/AllProjects
$ dir
Dz24\ 00\ token.txt

HidukPaul47@HOME-PC MINGW64 /d/HillelQA/Projects/GitHub/AllProjects
$ cd RepositAll
bash: cd: RepositAll: No such file or directory

HidukPaul47@HOME-PC MINGW64 /d/HillelQA/Projects/GitHub/AllProjects
$ cd GitHub
bash: cd: GitHub: No such file or directory

HidukPaul47@HOME-PC MINGW64 /d/HillelQA/Projects/GitHub/AllProjects
$ dir
Dz24\ 00\ token.txt

HidukPaul47@HOME-PC MINGW64 /d/HillelQA/Projects/GitHub/AllProjects
$ cd Projects
bash: cd: Projects: No such file or directory

HidukPaul47@HOME-PC MINGW64 /d/HillelQA/Projects/GitHub/AllProjects
$ dir
Dz24\ 00\ token.txt

HidukPaul47@HOME-PC MINGW64 /d/HillelQA/Projects/GitHub/AllProjects
$ git ..
git: '..' is not a git command. See 'git --help'.

The most similar commands are
        am
        gc
        mv
        p4
        rm

HidukPaul47@HOME-PC MINGW64 /d/HillelQA/Projects/GitHub/AllProjects
$ git help
usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           [--super-prefix=<path>] [--config-env=<name>=<envvar>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone     Clone a repository into a new directory
   init      Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add       Add file contents to the index
   mv        Move or rename a file, a directory, or a symlink
   restore   Restore working tree files
   rm        Remove files from the working tree and from the index

examine the history and state (see also: git help revisions)
   bisect    Use binary search to find the commit that introduced a bug
   diff      Show changes between commits, commit and working tree, etc
   grep      Print lines matching a pattern
   log       Show commit logs
   show      Show various types of objects
   status    Show the working tree status

grow, mark and tweak your common history
   branch    List, create, or delete branches
   commit    Record changes to the repository
   merge     Join two or more development histories together
   rebase    Reapply commits on top of another base tip
   reset     Reset current HEAD to the specified state
   switch    Switch branches
   tag       Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch     Download objects and refs from another repository
   pull      Fetch from and integrate with another repository or a local branch
   push      Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system.

HidukPaul47@HOME-PC MINGW64 /d/HillelQA/Projects/GitHub/AllProjects
$ git status
fatal: not a git repository (or any of the parent directories): .git

HidukPaul47@HOME-PC MINGW64 /d/HillelQA/Projects/GitHub/AllProjects
$ cd D;
bash: cd: D: No such file or directory

HidukPaul47@HOME-PC MINGW64 /d/HillelQA/Projects/GitHub/AllProjects
$ cd /d/HillelQA/Projects/GitHub

HidukPaul47@HOME-PC MINGW64 /d/HillelQA/Projects/GitHub
$ dir
AllProjects  Dz24\ 00\ token.txt  RepositAll

HidukPaul47@HOME-PC MINGW64 /d/HillelQA/Projects/GitHub
$ cd RepositAll

HidukPaul47@HOME-PC MINGW64 /d/HillelQA/Projects/GitHub/RepositAll
$ dir
HidukPaulCv  a\ Dz24HidukPaul  b\ Dz25HidukPaul

HidukPaul47@HOME-PC MINGW64 /d/HillelQA/Projects/GitHub/RepositAll
$ cd a
bash: cd: a: No such file or directory

HidukPaul47@HOME-PC MINGW64 /d/HillelQA/Projects/GitHub/RepositAll
$ cd a\ Dz24HidukPaul

HidukPaul47@HOME-PC MINGW64 /d/HillelQA/Projects/GitHub/RepositAll/a Dz24HidukPaul (main)
$ git status
On branch main
Your branch is up to date with 'origin/main'.

nothing to commit, working tree clean

HidukPaul47@HOME-PC MINGW64 /d/HillelQA/Projects/GitHub/RepositAll/a Dz24HidukPaul (main)
$ dir
test01.txt

HidukPaul47@HOME-PC MINGW64 /d/HillelQA/Projects/GitHub/RepositAll/a Dz24HidukPaul (main)
$ git add *

HidukPaul47@HOME-PC MINGW64 /d/HillelQA/Projects/GitHub/RepositAll/a Dz24HidukPaul (main)
$ git status
On branch main
Your branch is up to date with 'origin/main'.

nothing to commit, working tree clean

HidukPaul47@HOME-PC MINGW64 /d/HillelQA/Projects/GitHub/RepositAll/a Dz24HidukPaul (main)
$ git commit -m "a Dz24 Hidul Paul (Dz25)"
On branch main
Your branch is up to date with 'origin/main'.

nothing to commit, working tree clean

HidukPaul47@HOME-PC MINGW64 /d/HillelQA/Projects/GitHub/RepositAll/a Dz24HidukPaul (main)
$ git status
On branch main
Your branch is up to date with 'origin/main'.

nothing to commit, working tree clean

HidukPaul47@HOME-PC MINGW64 /d/HillelQA/Projects/GitHub/RepositAll/a Dz24HidukPaul (main)
$ git push
Everything up-to-date

HidukPaul47@HOME-PC MINGW64 /d/HillelQA/Projects/GitHub/RepositAll/a Dz24HidukPaul (main)
$

HidukPaul47@HOME-PC MINGW64 /d/HillelQA/Projects/GitHub/RepositAll/a Dz24HidukPaul (main)
$ dir
test01.txt

HidukPaul47@HOME-PC MINGW64 /d/HillelQA/Projects/GitHub/RepositAll/a Dz24HidukPaul (main)
$ git init
Reinitialized existing Git repository in D:/HillelQA/Projects/GitHub/RepositAll/a Dz24HidukPaul/.git/

HidukPaul47@HOME-PC MINGW64 /d/HillelQA/Projects/GitHub/RepositAll/a Dz24HidukPaul (main)
$ git status
On branch main
Your branch is up to date with 'origin/main'.

nothing to commit, working tree clean

HidukPaul47@HOME-PC MINGW64 /d/HillelQA/Projects/GitHub/RepositAll/a Dz24HidukPaul (main)
$ git orogon
git: 'orogon' is not a git command. See 'git --help'.

HidukPaul47@HOME-PC MINGW64 /d/HillelQA/Projects/GitHub/RepositAll/a Dz24HidukPaul (main)
$ git add *

HidukPaul47@HOME-PC MINGW64 /d/HillelQA/Projects/GitHub/RepositAll/a Dz24HidukPaul (main)
$ git help
usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]
           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]
           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]
           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]
           [--super-prefix=<path>] [--config-env=<name>=<envvar>]
           <command> [<args>]

These are common Git commands used in various situations:

start a working area (see also: git help tutorial)
   clone     Clone a repository into a new directory
   init      Create an empty Git repository or reinitialize an existing one

work on the current change (see also: git help everyday)
   add       Add file contents to the index
   mv        Move or rename a file, a directory, or a symlink
   restore   Restore working tree files
   rm        Remove files from the working tree and from the index

examine the history and state (see also: git help revisions)
   bisect    Use binary search to find the commit that introduced a bug
   diff      Show changes between commits, commit and working tree, etc
   grep      Print lines matching a pattern
   log       Show commit logs
   show      Show various types of objects
   status    Show the working tree status

grow, mark and tweak your common history
   branch    List, create, or delete branches
   commit    Record changes to the repository
   merge     Join two or more development histories together
   rebase    Reapply commits on top of another base tip
   reset     Reset current HEAD to the specified state
   switch    Switch branches
   tag       Create, list, delete or verify a tag object signed with GPG

collaborate (see also: git help workflows)
   fetch     Download objects and refs from another repository
   pull      Fetch from and integrate with another repository or a local branch
   push      Update remote refs along with associated objects

'git help -a' and 'git help -g' list available subcommands and some
concept guides. See 'git help <command>' or 'git help <concept>'
to read about a specific subcommand or concept.
See 'git help git' for an overview of the system.

HidukPaul47@HOME-PC MINGW64 /d/HillelQA/Projects/GitHub/RepositAll/a Dz24HidukPaul (main)
$ git add Dz25.txt
fatal: pathspec 'Dz25.txt' did not match any files

HidukPaul47@HOME-PC MINGW64 /d/HillelQA/Projects/GitHub/RepositAll/a Dz24HidukPaul (main)
$ git add [Dz25.txt]
fatal: pathspec '[Dz25.txt]' did not match any files

HidukPaul47@HOME-PC MINGW64 /d/HillelQA/Projects/GitHub/RepositAll/a Dz24HidukPaul (main)
$ git status
On branch main
Your branch is up to date with 'origin/main'.

nothing to commit, working tree clean

HidukPaul47@HOME-PC MINGW64 /d/HillelQA/Projects/GitHub/RepositAll/a Dz24HidukPaul (main)
$ git fetch

HidukPaul47@HOME-PC MINGW64 /d/HillelQA/Projects/GitHub/RepositAll/a Dz24HidukPaul (main)
$ git status
On branch main
Your branch is up to date with 'origin/main'.

nothing to commit, working tree clean

HidukPaul47@HOME-PC MINGW64 /d/HillelQA/Projects/GitHub/RepositAll/a Dz24HidukPaul (main)
$ cat > test01.txt
=) Обновлено.
Dz25
. Git
NOTE: Команда ‘git init’, инициализирует репозиторий в текущей директории. После выпол-нения этой команды, в bash-консоли, начинает отображаться текущая ветка (master, или main).
Команда ‘git add’, подсвечивает список изменений, готовых для включения в ‘commit’.
Команда ‘git commit’, выполняет запись изменений в локальном репозитории.
Выполнение команды ‘push’, ведет к отправке изменений на сервер удаленного доступа GitHub.
Команда ‘git pull’, напротив, стягивает изменения с удаленного репозитория в локальный.

Глоссарий команд в помощь: Git Terminology

Задание
Предполагается, что результатом выполнения предыдущего задания, является отдельная директория (a), в которой инициализирован репозиторий, из которого выполнялся ‘push’ на GitHub.

Создать новую директорию (никак не связанную с предыдущей).
Разобраться с использованием команды ‘git clone’, клонировать имеющийся репозиторий с GitHub, в новую директорию (b).

Вернуться в директорию a, создать новый файл, и выполнить необходимую последова-тельность команд в git bash консоли, чтобы выполнить push новых изменений на GitHub.

Перейти в директорию b, и выполнить команду pull чтобы стянуть с удаленного репозито-рия те изменения, о которых, пока еще склонированный репозиторий не знает.

Ответом на задание прислать скриншот, демонстрирующий наличие файла, который был ‘запушен’ на удаленный репозиторий, а также успешное выполнение команды pull в клонированном репозитории.



HidukPaul47@HOME-PC MINGW64 /d/HillelQA/Projects/GitHub/RepositAll/a Dz24HidukPaul (main)
$ git status
On branch main
Your branch is up to date with 'origin/main'.

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   test01.txt

no changes added to commit (use "git add" and/or "git commit -a")

HidukPaul47@HOME-PC MINGW64 /d/HillelQA/Projects/GitHub/RepositAll/a Dz24HidukPaul (main)
$ git add *

HidukPaul47@HOME-PC MINGW64 /d/HillelQA/Projects/GitHub/RepositAll/a Dz24HidukPaul (main)
$ git status
On branch main
Your branch is up to date with 'origin/main'.

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        modified:   test01.txt


HidukPaul47@HOME-PC MINGW64 /d/HillelQA/Projects/GitHub/RepositAll/a Dz24HidukPaul (main)
$ git commit -m "Dz24HidukPaul (Dz25)"
[main 159fc70] Dz24HidukPaul (Dz25)
 1 file changed, 23 insertions(+), 68 deletions(-)
 rewrite test01.txt (99%)

HidukPaul47@HOME-PC MINGW64 /d/HillelQA/Projects/GitHub/RepositAll/a Dz24HidukPaul (main)
$ git push
Enumerating objects: 5, done.
Counting objects: 100% (5/5), done.
Delta compression using up to 4 threads
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 1.19 KiB | 1.19 MiB/s, done.
Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
To https://github.com/gpaul47/Dz24HidukPaul.git
   f4832e4..159fc70  main -> main

HidukPaul47@HOME-PC MINGW64 /d/HillelQA/Projects/GitHub/RepositAll/a Dz24HidukPaul (main)
$ cd /d/HillelQA/Projects/GitHub/RepositAll/

HidukPaul47@HOME-PC MINGW64 /d/HillelQA/Projects/GitHub/RepositAll
$ dir
HidukPaulCv  a\ Dz24HidukPaul  b\ Dz25HidukPaul

HidukPaul47@HOME-PC MINGW64 /d/HillelQA/Projects/GitHub/RepositAll
$ cd b\ Dz25HidukPaul

HidukPaul47@HOME-PC MINGW64 /d/HillelQA/Projects/GitHub/RepositAll/b Dz25HidukPaul
$ git clone https://github.com/gpaul47/Dz24HidukPaul.git
Cloning into 'Dz24HidukPaul'...
remote: Enumerating objects: 17, done.
remote: Counting objects: 100% (17/17), done.
remote: Compressing objects: 100% (10/10), done.
remote: Total 17 (delta 1), reused 16 (delta 0), pack-reused 0
Receiving objects: 100% (17/17), done.
Resolving deltas: 100% (1/1), done.

HidukPaul47@HOME-PC MINGW64 /d/HillelQA/Projects/GitHub/RepositAll/b Dz25HidukPaul
$ git pull /d/HillelQA/Projects/JavaHtmlCssJS+/Java/StudyProject/src
fatal: not a git repository (or any of the parent directories): .git

HidukPaul47@HOME-PC MINGW64 /d/HillelQA/Projects/GitHub/RepositAll/b Dz25HidukPaul
$ cd /d/HillelQA/Projects/JavaHtmlCssJS+/Java/StudyProject/src

HidukPaul47@HOME-PC MINGW64 /d/HillelQA/Projects/JavaHtmlCssJS+/Java/StudyProject/src (master)
$ dir
Animal.java  Cat.java  Dog.java  Main.java  Notes

HidukPaul47@HOME-PC MINGW64 /d/HillelQA/Projects/JavaHtmlCssJS+/Java/StudyProject/src (master)
$ git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
        new file:   ../StudyProject.iml
        new file:   ../out/production/StudyProject/Animal.class
        new file:   ../out/production/StudyProject/Cat.class
        new file:   ../out/production/StudyProject/Dog.class
        new file:   ../out/production/StudyProject/Main.class
        new file:   ../out/production/StudyProject/Notes
        new file:   Animal.java
        new file:   Cat.java
        new file:   Dog.java
        new file:   Main.java
        new file:   Notes

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        ../.idea/


HidukPaul47@HOME-PC MINGW64 /d/HillelQA/Projects/JavaHtmlCssJS+/Java/StudyProject/src (master)
$ git commin -m "Dz25 Java 'super'"
git: 'commin' is not a git command. See 'git --help'.

The most similar command is
        commit

HidukPaul47@HOME-PC MINGW64 /d/HillelQA/Projects/JavaHtmlCssJS+/Java/StudyProject/src (master)
$ git push
fatal: No configured push destination.
Either specify the URL from the command-line or configure a remote repository using

    git remote add <name> <url>

and then push using the remote name

    git push <name>


HidukPaul47@HOME-PC MINGW64 /d/HillelQA/Projects/JavaHtmlCssJS+/Java/StudyProject/src (master)
$ cd b\ Dz25HidukPaul
bash: cd: b Dz25HidukPaul: No such file or directory

HidukPaul47@HOME-PC MINGW64 /d/HillelQA/Projects/JavaHtmlCssJS+/Java/StudyProject/src (master)
$ cd /d/HillelQA/Projects/GitHub/RepositAll

HidukPaul47@HOME-PC MINGW64 /d/HillelQA/Projects/GitHub/RepositAll
$ cd ^C

HidukPaul47@HOME-PC MINGW64 /d/HillelQA/Projects/GitHub/RepositAll
$ cd b\ Dz25HidukPaul

HidukPaul47@HOME-PC MINGW64 /d/HillelQA/Projects/GitHub/RepositAll/b Dz25HidukPaul
$ git status
fatal: not a git repository (or any of the parent directories): .git

HidukPaul47@HOME-PC MINGW64 /d/HillelQA/Projects/GitHub/RepositAll/b Dz25HidukPaul
$ dir
Dz24HidukPaul

HidukPaul47@HOME-PC MINGW64 /d/HillelQA/Projects/GitHub/RepositAll/b Dz25HidukPaul
$ cd /d/HillelQA/Projects/GitHub/RepositAll/b Dz25HidukPaul
bash: cd: too many arguments
Dz24HidukPaul

HidukPaul47@HOME-PC MINGW64 /d/HillelQA/Projects/GitHub/RepositAll/b Dz25HidukPaul
$ $ dir
bash: $: command not found

HidukPaul47@HOME-PC MINGW64 /d/HillelQA/Projects/GitHub/RepositAll/b Dz25HidukPaul
$ Dz24HidukPaul
bash: Dz24HidukPaul: command not found

HidukPaul47@HOME-PC MINGW64 /d/HillelQA/Projects/GitHub/RepositAll/b Dz25HidukPaul
$ cd /d/HillelQA/Projects/GitHub/RepositAll/b Dz25HidukPaul/Dz24HidukPaul
bash: cd: too many arguments

HidukPaul47@HOME-PC MINGW64 /d/HillelQA/Projects/GitHub/RepositAll/b Dz25HidukPaul
$ dir
Dz24HidukPaul

HidukPaul47@HOME-PC MINGW64 /d/HillelQA/Projects/GitHub/RepositAll/b Dz25HidukPaul
$ cd Dz24HidukPaul

HidukPaul47@HOME-PC MINGW64 /d/HillelQA/Projects/GitHub/RepositAll/b Dz25HidukPaul/Dz24HidukPaul (main)
$ git status
On branch main
Your branch is up to date with 'origin/main'.

nothing to commit, working tree clean

HidukPaul47@HOME-PC MINGW64 /d/HillelQA/Projects/GitHub/RepositAll/b Dz25HidukPaul/Dz24HidukPaul (main)
$ git pull
Already up to date.

HidukPaul47@HOME-PC MINGW64 /d/HillelQA/Projects/GitHub/RepositAll/b Dz25HidukPaul/Dz24HidukPaul (main)
$ cd /d/HillelQA/Projects/GitHub/RepositAll/a Dz24HidukPaul
bash: cd: too many arguments

HidukPaul47@HOME-PC MINGW64 /d/HillelQA/Projects/GitHub/RepositAll/b Dz25HidukPaul/Dz24HidukPaul (main)
$ cd /d/HillelQA/Projects/GitHub/RepositAll/a/Dz24HidukPaul
bash: cd: /d/HillelQA/Projects/GitHub/RepositAll/a/Dz24HidukPaul: No such file or directory

HidukPaul47@HOME-PC MINGW64 /d/HillelQA/Projects/GitHub/RepositAll/b Dz25HidukPaul/Dz24HidukPaul (main)
$ cd /d/HillelQA/Projects/GitHub/RepositAll

HidukPaul47@HOME-PC MINGW64 /d/HillelQA/Projects/GitHub/RepositAll
$ dir
HidukPaulCv  a\ Dz24HidukPaul  b\ Dz25HidukPaul

HidukPaul47@HOME-PC MINGW64 /d/HillelQA/Projects/GitHub/RepositAll
$ cd a\ Dz24HidukPaul

HidukPaul47@HOME-PC MINGW64 /d/HillelQA/Projects/GitHub/RepositAll/a Dz24HidukPaul (main)
$ cat > ReadMy.txt

Вернуться в директорию a, создать новый файл, и выполнить необходимую последова-тельность команд в git bash консоли, чтобы выполнить push новых изменений на GitHub.

Перейти в директорию b, и выполнить команду pull чтобы стянуть с удаленного репозито-рия те изменения, о которых, пока еще склонированный репозиторий не знает.

Ответом на задание прислать скриншот, демонстрирующий наличие файла, который был ‘запушен’ на удаленный репозиторий, а также успешное выполнение команды pull в клонированном репозитории.



HidukPaul47@HOME-PC MINGW64 /d/HillelQA/Projects/GitHub/RepositAll/a Dz24HidukPaul (main)
$ git add *

HidukPaul47@HOME-PC MINGW64 /d/HillelQA/Projects/GitHub/RepositAll/a Dz24HidukPaul (main)
$ git status
On branch main
Your branch is up to date with 'origin/main'.

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
        new file:   ReadMy.txt


HidukPaul47@HOME-PC MINGW64 /d/HillelQA/Projects/GitHub/RepositAll/a Dz24HidukPaul (main)
$ git commit -m "a push dz 25 Dz24HidukPaul"
[main 6babfe6] a push dz 25 Dz24HidukPaul
 1 file changed, 7 insertions(+)
 create mode 100644 ReadMy.txt

HidukPaul47@HOME-PC MINGW64 /d/HillelQA/Projects/GitHub/RepositAll/a Dz24HidukPaul (main)
$ git push
Enumerating objects: 4, done.
Counting objects: 100% (4/4), done.
Delta compression using up to 4 threads
Compressing objects: 100% (3/3), done.
Writing objects: 100% (3/3), 703 bytes | 703.00 KiB/s, done.
Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
To https://github.com/gpaul47/Dz24HidukPaul.git
   159fc70..6babfe6  main -> main

HidukPaul47@HOME-PC MINGW64 /d/HillelQA/Projects/GitHub/RepositAll/a Dz24HidukPaul (main)
$ cd /d/HillelQA/Projects/GitHub/RepositAll/b Dz25HidukPaul/Dz24HidukPaul
bash: cd: too many arguments

HidukPaul47@HOME-PC MINGW64 /d/HillelQA/Projects/GitHub/RepositAll/a Dz24HidukPaul (main)
$ cd

HidukPaul47@HOME-PC MINGW64 ~ (main)
$ cd /d/HillelQA/Projects/GitHub/RepositAll/b\ Dz25HidukPaul/Dz24HidukPaul

HidukPaul47@HOME-PC MINGW64 /d/HillelQA/Projects/GitHub/RepositAll/b Dz25HidukPaul/Dz24HidukPaul (main)
$ git status
On branch main
Your branch is up to date with 'origin/main'.

nothing to commit, working tree clean

HidukPaul47@HOME-PC MINGW64 /d/HillelQA/Projects/GitHub/RepositAll/b Dz25HidukPaul/Dz24HidukPaul (main)
$ git push
To https://github.com/gpaul47/Dz24HidukPaul.git
 ! [rejected]        main -> main (fetch first)
error: failed to push some refs to 'https://github.com/gpaul47/Dz24HidukPaul.git'
hint: Updates were rejected because the remote contains work that you do
hint: not have locally. This is usually caused by another repository pushing
hint: to the same ref. You may want to first integrate the remote changes
hint: (e.g., 'git pull ...') before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.

HidukPaul47@HOME-PC MINGW64 /d/HillelQA/Projects/GitHub/RepositAll/b Dz25HidukPaul/Dz24HidukPaul (main)
$ git status
On branch main
Your branch is up to date with 'origin/main'.

nothing to commit, working tree clean

HidukPaul47@HOME-PC MINGW64 /d/HillelQA/Projects/GitHub/RepositAll/b Dz25HidukPaul/Dz24HidukPaul (main)
$ git add *

HidukPaul47@HOME-PC MINGW64 /d/HillelQA/Projects/GitHub/RepositAll/b Dz25HidukPaul/Dz24HidukPaul (main)
$ git pull
remote: Enumerating objects: 4, done.
remote: Counting objects: 100% (4/4), done.
remote: Compressing objects: 100% (3/3), done.
remote: Total 3 (delta 0), reused 3 (delta 0), pack-reused 0
Unpacking objects: 100% (3/3), 683 bytes | 2.00 KiB/s, done.
From https://github.com/gpaul47/Dz24HidukPaul
   159fc70..6babfe6  main       -> origin/main
Updating 159fc70..6babfe6
Fast-forward
 ReadMy.txt | 7 +++++++
 1 file changed, 7 insertions(+)
 create mode 100644 ReadMy.txt

HidukPaul47@HOME-PC MINGW64 /d/HillelQA/Projects/GitHub/RepositAll/b Dz25HidukPaul/Dz24HidukPaul (main)
$ git status
On branch main
Your branch is up to date with 'origin/main'.

nothing to commit, working tree clean

HidukPaul47@HOME-PC MINGW64 /d/HillelQA/Projects/GitHub/RepositAll/b Dz25HidukPaul/Dz24HidukPaul (main)
$ cd /d/HillelQA/Projects/JavaHtmlCssJS+/Java/StudyProject/src

HidukPaul47@HOME-PC MINGW64 /d/HillelQA/Projects/JavaHtmlCssJS+/Java/StudyProject/src (master)
$ dir
Animal.java  Cat.java  Dog.java  Main.java  Notes

HidukPaul47@HOME-PC MINGW64 /d/HillelQA/Projects/JavaHtmlCssJS+/Java/StudyProject/src (master)
$ git add *

HidukPaul47@HOME-PC MINGW64 /d/HillelQA/Projects/JavaHtmlCssJS+/Java/StudyProject/src (master)
$ cat > Dz25ReadMy.txt
